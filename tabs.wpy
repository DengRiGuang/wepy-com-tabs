<template>
    <view class="com-tab" style="height:{{height}}px;">
        <scroll-view class="com-navbar" id="{{only_id}}" scroll-x="true" style="height:{{height}}px;">
            <repeat for="{{tabs}}" key="idx" index="idx" item="item">
                <view id="{{item.id}}" style="color:{{activeIndex == idx ? selectColor : color }}" class="com-navbar__item" @tap="tabClick({{idx}},{{$event}})">
                    <view class="com-navbar__title" style="line-height:{{height}}px;font-size:{{fontSize}}px;">{{item.title}}</view>
                </view>
            </repeat>
            <view class="com-navbar__slider" style="top:{{height}}px;background:{{selectColor}};width:{{sliderWidth}}px;left: {{sliderLeft}}px; transform: translateX({{sliderOffset}}px); -webkit-transform: translateX({{sliderOffset}}px);"></view>
        </scroll-view>
    </view>
</template>

<script>
    import wepy from 'wepy'
    export default class Tabs extends wepy.component {
        props = {
            height: {
                type: String,
                default: '35'
            },
            sliderWidth: {
                type: String,
                default: '20'
            },
            fontSize: {
                type: String,
                default: '12'
            },
            selectColor: {
                type: String,
                default: '#1AAD19'
            },
            color: {
                type: String,
                default: '#888888'
            }
        };
        data = {
            tabs: [],
            activeIndex: 0,
            sliderOffset: 0,
            sliderLeft: 0,
            only_id: `tab_${Math.random().toString(36).substr(2)}`
        };
        methods = {
            tabClick(index, event) {
                this.activeIndex = index;
                this.sliderOffset = event.currentTarget.offsetLeft;
                this.setSlider()
            }
        }
        watch = {
            activeIndex(val) {
                this.$emit('change', val)
            }
        };
        // slider位置移动
        async setSlider() {
            const id = this.tabs[this.activeIndex].id
            const domInfo = await this._getDomRect(`#${id}`)
            this.sliderLeft = (domInfo.width - this.sliderWidth) / 2
            this.$apply();
        }
        // 获取节点
        _getDomRect(dom) {
            return new Promise((resolve, reject) => {
                wx.createSelectorQuery().select(dom).boundingClientRect((res) => {
                    resolve(res);
                }).exec()
            });
        }
        init(arr) {
            this.tabs = []
            arr.forEach((val, i) => {
                this.tabs.push({
                    title: val,
                    id: `${this.only_id}${i}`
                })
            });
            this.$apply();
            this.setSlider()
        }
        onLoad() {
        }
    }
</script>


<style lang="less" scoped>
    .com-tab {
        background: #fff;
        position: relative;
        height: 100%;
    }
    .com-navbar {
        white-space: nowrap;
        border: 0;
        display: flex;
        position: absolute;
        z-index: 500;
        top: 0;
        width: 100%;
    }
    .com-navbar__item {
        display: inline-block;
        padding: 0;
        position: relative;
        flex: 1;
        text-align: center;
        font-size: 0;
    }
    .com-navbar__title {
        padding-left: 20rpx;
        padding-right: 20rpx;
        display: inline-block;
        font-size: 15px;
        max-width: 8em;
        width: auto;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        word-wrap: normal;
    }
    .com-navbar__slider {
        border-radius: 10rpx;
        margin-top: -3px;
        position: absolute;
        content: " ";
        left: 0;
        bottom: 0;
        width: 6em;
        height: 3px;
        background-color: #1AAD19;
        transition: transform .3s;
    }
</style>